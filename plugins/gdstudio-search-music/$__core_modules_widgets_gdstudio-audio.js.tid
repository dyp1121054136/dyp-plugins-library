created: 20250530105155960
modified: 20250530130618574
module-type: widget
tags: gdstudio 音乐播放器
title: $:/core/modules/widgets/gdstudio-audio.js
type: application/javascript

/*\
title: $:/core/modules/widgets/gdstudio-audio.js
type: application/javascript
module-type: widget

GDStudio Audio Widget - 迷你音频播放器
\*/

"use strict";

var Widget = require("$:/core/modules/widgets/widget.js").widget;

var GDStudioAudioWidget = function(parseTreeNode,options) {
    this.initialise(parseTreeNode,options);
};

GDStudioAudioWidget.prototype = new Widget();

GDStudioAudioWidget.prototype.execute = function() {
    this.coverUrl = this.getAttribute("cover-url", "");
    this.musicUrl = this.getAttribute("music-url", "");
    this.songName = this.getAttribute("song-name", "未知歌曲");
    this.artist = this.getAttribute("artist", "未知歌手");
    
    this.makeChildWidgets();
};

GDStudioAudioWidget.prototype.createDefaultCover = function() {
    return "data:image/svg+xml;charset=utf-8," + encodeURIComponent(
        '<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100">' +
        '<rect width="100%" height="100%" fill="#f0f0f0"/>' +
        '</svg>'
    );
};

GDStudioAudioWidget.prototype.render = function(parent,nextSibling) {
    var self = this;
    this.parentDomNode = parent;
    this.computeAttributes();
    this.execute();
    
    var playerDiv = this.document.createElement("div");
    playerDiv.className = "gdstudio-mini-player";
    
    var coverContainer = this.document.createElement("div");
    coverContainer.className = "gdstudio-mini-cover";
    
    var coverImg = this.document.createElement("img");
    coverImg.src = this.coverUrl || this.createDefaultCover();
    coverImg.className = "gdstudio-mini-cover-img";
    
    var playButton = this.document.createElement("button");
    playButton.className = "gdstudio-mini-play-btn";
    playButton.innerHTML = "▶";
    
    coverContainer.appendChild(coverImg);
    coverContainer.appendChild(playButton);
    
    var infoSection = this.document.createElement("div");
    infoSection.className = "gdstudio-mini-info";
    
    var musicName = this.document.createElement("div");
    musicName.className = "gdstudio-music-name";
    musicName.textContent = this.songName + " - " + this.artist;
    
    var controls = this.document.createElement("div");
    controls.className = "gdstudio-mini-controls";
    
    var timeDisplay = this.document.createElement("span");
    timeDisplay.className = "gdstudio-time";
    timeDisplay.textContent = "0:00/0:00";
    
    var progressBar = this.document.createElement("div");
    progressBar.className = "gdstudio-progress";
    
    var progressFill = this.document.createElement("div");
    progressFill.className = "gdstudio-progress-fill";
    progressBar.appendChild(progressFill);
    
    // 合并的音量控制按钮
    var volumeBtn = this.document.createElement("button");
    volumeBtn.className = "gdstudio-volume-btn";
    volumeBtn.innerHTML = "🔊";
    
    // 音量面板
    var volumePanel = this.document.createElement("div");
    volumePanel.className = "gdstudio-volume-panel";
    
    var volumeSlider = this.document.createElement("input");
    volumeSlider.type = "range";
    volumeSlider.min = "0";
    volumeSlider.max = "100";
    volumeSlider.value = "50";
    volumeSlider.className = "gdstudio-volume-slider";
    volumePanel.appendChild(volumeSlider);
    
    controls.appendChild(timeDisplay);
    controls.appendChild(progressBar);
    controls.appendChild(volumeBtn);
    controls.appendChild(volumePanel);
    
    infoSection.appendChild(musicName);
    infoSection.appendChild(controls);
    
    var audio = this.document.createElement("audio");
    if(this.musicUrl) {
        audio.src = this.musicUrl;
    }
    audio.preload = "metadata";
    audio.volume = 0.5; // 设置初始音量
    
    playerDiv.appendChild(coverContainer);
    playerDiv.appendChild(infoSection);
    playerDiv.appendChild(audio);
    
    // 事件处理
    var isPlaying = false;
    var volumeVisible = false;
    var isMuted = false;
    var previousVolume = 0.5;
    
    // 播放控制
// 暂停播放的 SVG 代码，从条目text获取
const pauseSvg = this.wiki.getTiddlerText("$:/core/images/gdstudio-pause-music");
    playButton.addEventListener("click", function() {
        if (!audio.src) return;
        if (isPlaying) {
            audio.pause();
            playButton.innerHTML = "▶";
            coverImg.classList.remove("spinning");
        } else {
            audio.play();
            playButton.innerHTML = pauseSvg;
            coverImg.classList.add("spinning");
        }
        isPlaying = !isPlaying;
    });
    
    // 合并的音量按钮控制
    volumeBtn.addEventListener("click", function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        if (!volumeVisible) {
            // 第一次点击：显示音量滑块
            volumeVisible = true;
            volumePanel.classList.add("visible");
        } else {
            // 音量滑块已显示时：切换静音状态
            if (isMuted) {
                // 取消静音
                audio.volume = previousVolume;
                volumeSlider.value = previousVolume * 100;
                volumeBtn.innerHTML = "🔊";
                isMuted = false;
            } else {
                // 静音
                previousVolume = audio.volume;
                audio.volume = 0;
                volumeSlider.value = 0;
                volumeBtn.innerHTML = "🔇";
                isMuted = true;
            }
        }
    });
    
    // 音量滑块控制
    volumeSlider.addEventListener("input", function() {
        var volume = this.value / 100;
        audio.volume = volume;
        
        if (volume === 0) {
            volumeBtn.innerHTML = "🔇";
            isMuted = true;
        } else {
            volumeBtn.innerHTML = "🔊";
            isMuted = false;
            if (volume > 0) {
                previousVolume = volume;
            }
        }
    });
    
    // 点击外部关闭音量面板
    this.document.addEventListener("click", function(e) {
        if (!volumeBtn.contains(e.target) && !volumePanel.contains(e.target)) {
            volumeVisible = false;
            volumePanel.classList.remove("visible");
        }
    });
    
    // 时间更新
    audio.addEventListener("timeupdate", function() {
        if (audio.duration) {
            var progress = (audio.currentTime / audio.duration) * 100;
            progressFill.style.width = progress + "%";
            
            var currentMin = Math.floor(audio.currentTime / 60);
            var currentSec = Math.floor(audio.currentTime % 60);
            var totalMin = Math.floor(audio.duration / 60);
            var totalSec = Math.floor(audio.duration % 60);
            
            timeDisplay.textContent = currentMin + ":" + (currentSec < 10 ? "0" : "") + currentSec + 
                                    "/" + totalMin + ":" + (totalSec < 10 ? "0" : "") + totalSec;
        }
    });
    
    audio.addEventListener("ended", function() {
        playButton.innerHTML = "▶";
        coverImg.classList.remove("spinning");
        isPlaying = false;
    });
    
    parent.insertBefore(playerDiv, nextSibling);
    this.domNodes.push(playerDiv);
};

GDStudioAudioWidget.prototype.refresh = function(changedTiddlers) {
    var changedAttributes = this.computeAttributes();
    if (Object.keys(changedAttributes).length > 0) {
        this.refreshSelf();
        return true;
    }
    return this.refreshChildren(changedTiddlers);
};

exports["gdstudio-audio"] = GDStudioAudioWidget;
