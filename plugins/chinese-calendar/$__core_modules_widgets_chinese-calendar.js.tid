created: 20250606062947638
modified: 20250606090526246
module-type: widget
tags: 中文日历
title: $:/core/modules/widgets/chinese-calendar.js
type: application/javascript

/*\  
title: $:/core/modules/widgets/chinese-calendar.js  
type: application/javascript  
module-type: widget  
  
中文日历widget - 支持农历、节假日、今日高亮和批注功能  
\*/  
  
"use strict";  
  
var Widget = require("$:/core/modules/widgets/widget.js").widget;  
  
var ChineseCalendarWidget = function(parseTreeNode,options) {  
    this.initialise(parseTreeNode,options);  
};  
  
ChineseCalendarWidget.prototype = new Widget();  
  
ChineseCalendarWidget.prototype.render = function(parent,nextSibling) {  
    this.parentDomNode = parent;  
    this.computeAttributes();  
    this.execute();  
      
    var calendarNode = this.document.createElement("div");  
    calendarNode.setAttribute("class", "tc-chinese-calendar");  
      
    this.generateCalendar(calendarNode);  
      
    parent.insertBefore(calendarNode,nextSibling);  
    this.domNodes.push(calendarNode);  
};  
  
ChineseCalendarWidget.prototype.execute = function() {  
    this.year = parseInt(this.getAttribute("year", new Date().getFullYear().toString()));  
    this.month = parseInt(this.getAttribute("month", (new Date().getMonth() + 1).toString()));  
    this.showLunar = this.getAttribute("lunar", "yes") === "yes";  
    this.showHolidays = this.getAttribute("holidays", "yes") === "yes";  
    this.mondayFirst = this.getAttribute("monday-first", "no") === "yes";  
    this.highlightToday = this.getAttribute("highlight-today", "yes") === "yes";  
    this.annotationFilter = this.getAttribute("annotation-filter", "");  
      
    var today = new Date();  
    this.todayYear = today.getFullYear();  
    this.todayMonth = today.getMonth() + 1;  
    this.todayDate = today.getDate();  
};  
  
ChineseCalendarWidget.prototype.generateCalendar = function(container) {  
    var monthNames = ["一月", "二月", "三月", "四月", "五月", "六月",   
                     "七月", "八月", "九月", "十月", "十一月", "十二月"];  
      
    var dayNames = this.mondayFirst ?   
        ["一", "二", "三", "四", "五", "六", "日"] :   
        ["日", "一", "二", "三", "四", "五", "六"];  
      
    // 创建标题  
    var title = this.document.createElement("h3");  
    title.setAttribute("class", "tc-calendar-title");  
    title.appendChild(this.document.createTextNode(this.year + "年" + monthNames[this.month - 1]));  
    container.appendChild(title);  
      
    // 创建表格  
    var table = this.document.createElement("table");  
    table.setAttribute("class", "tc-calendar-table");  
      
    // 创建表头  
    var thead = this.document.createElement("thead");  
    var headerRow = this.document.createElement("tr");  
    dayNames.forEach(function(dayName) {  
        var th = this.document.createElement("th");  
        th.appendChild(this.document.createTextNode(dayName));  
        headerRow.appendChild(th);  
    }, this);  
    thead.appendChild(headerRow);  
    table.appendChild(thead);  
      
    // 创建表体  
    this.generateCalendarBody(table);  
      
    container.appendChild(table);  
};  
  
ChineseCalendarWidget.prototype.generateCalendarBody = function(table) {  
    var tbody = this.document.createElement("tbody");  
    var firstDay = new Date(this.year, this.month - 1, 1).getDay();  
      
    if(this.mondayFirst) {  
        firstDay = (firstDay === 0) ? 6 : firstDay - 1;  
    }  
      
    var daysInMonth = new Date(this.year, this.month, 0).getDate();  
    var date = 1;  
      
    for(var week = 0; week < 6; week++) {  
        var row = this.document.createElement("tr");  
        for(var day = 0; day < 7; day++) {  
            var cell = this.document.createElement("td");  
            if(week === 0 && day < firstDay || date > daysInMonth) {  
                cell.setAttribute("class", "tc-calendar-empty");  
            } else {  
                this.createDateCell(cell, date);  
                date++;  
            }  
            row.appendChild(cell);  
        }  
        tbody.appendChild(row);  
        if(date > daysInMonth) break;  
    }  
      
    table.appendChild(tbody);  
};  
  
ChineseCalendarWidget.prototype.createDateCell = function(cell, date) {  
    var currentDate = new Date(this.year, this.month - 1, date);  
    var isToday = this.highlightToday &&   
                  this.year === this.todayYear &&   
                  this.month === this.todayMonth &&   
                  date === this.todayDate;  
      
    var cellClasses = ["tc-calendar-cell"];  
    if(isToday) cellClasses.push("tc-calendar-today");  
      
    // 创建日期链接容器  
    var dateLink = this.createDateLink(date);  
    var cellContent = this.createCellContent(date, currentDate, cellClasses);  
      
    dateLink.appendChild(cellContent);  
    cell.appendChild(dateLink);  
      
    // 处理批注  
    this.handleAnnotations(cell, currentDate, cellClasses);  
      
    cell.setAttribute("class", cellClasses.join(" "));  
};  
  
ChineseCalendarWidget.prototype.createDateLink = function(date) {  
    var dateLink = this.document.createElement("div");  
    dateLink.setAttribute("class", "tc-calendar-date-link");  
      
    var dateKey = this.year + "年" +   
                  String(this.month).padStart(2, '0') + "月" +   
                  String(date).padStart(2, '0') + "日";  
      
    var self = this;  
    dateLink.addEventListener("click", function(event) {  
        if(!event.target.closest('.tc-calendar-annotation-button')) {  
            event.stopPropagation();  
            self.dispatchEvent({  
                type: "tm-navigate",  
                navigateTo: dateKey,  
                navigateFromTitle: self.getVariable("currentTiddler")  
            });  
        }  
    });  
      
    return dateLink;  
};  
  
ChineseCalendarWidget.prototype.createCellContent = function(date, currentDate, cellClasses) {  
    var cellContent = this.document.createElement("div");  
    cellContent.setAttribute("class", "tc-calendar-cell-content");  
      
    // 日期数字  
    var dateDiv = this.document.createElement("div");  
    dateDiv.setAttribute("class", "tc-calendar-date");  
    dateDiv.appendChild(this.document.createTextNode(date.toString()));  
    cellContent.appendChild(dateDiv);  
      
    // 农历日期  
    if(this.showLunar) {  
        var lunarDate = this.getLunarDate(currentDate);  
        if(lunarDate) {  
            var lunarDiv = this.document.createElement("div");  
            lunarDiv.setAttribute("class", "tc-calendar-lunar");  
            lunarDiv.appendChild(this.document.createTextNode(lunarDate));  
            cellContent.appendChild(lunarDiv);  
        }  
    }  
      
    // 节假日  
    if(this.showHolidays) {  
        var holiday = this.getHoliday(currentDate);  
        if(holiday) {  
            var holidayDiv = this.document.createElement("div");  
            holidayDiv.setAttribute("class", "tc-calendar-holiday");  
            holidayDiv.appendChild(this.document.createTextNode(holiday));  
            cellContent.appendChild(holidayDiv);  
            cellClasses.push("tc-calendar-holiday-cell");  
        }  
    }  
      
    return cellContent;  
};  
  
ChineseCalendarWidget.prototype.handleAnnotations = function(cell, currentDate, cellClasses) {  
    if(!this.annotationFilter) return;  
      
    var annotations = this.getAnnotations(currentDate);  
    if(annotations && annotations.length > 0) {  
        if(annotations.length === 1) {  
            this.addSingleAnnotation(cell, annotations[0]);  
        } else {  
            this.addMultipleAnnotations(cell, annotations);  
        }  
        cellClasses.push("tc-calendar-annotated");  
    }  
};  
  
ChineseCalendarWidget.prototype.getLunarDate = function(date) {  
    var monthKey = date.getFullYear() + "-" + String(date.getMonth() + 1).padStart(2, '0');  
    var dayKey = String(date.getDate());  
      
    var lunarDataTiddler = this.wiki.getTiddler("$:/data/lunar/" + monthKey);  
      
    if(lunarDataTiddler && lunarDataTiddler.fields.text) {  
        try {  
            var monthData = JSON.parse(lunarDataTiddler.fields.text);  
            return monthData[dayKey] || "";  
        } catch(e) {  
            return "";  
        }  
    }  
    return "";  
};  
  
ChineseCalendarWidget.prototype.getHoliday = function(date) {  
    var dateKey = date.getFullYear() + "-" +   
                  String(date.getMonth() + 1).padStart(2, '0') + "-" +   
                  String(date.getDate()).padStart(2, '0');  
      
    // 查找整年的节假日数据tiddler  
    var holidayDataTiddler = this.wiki.getTiddler("$:/data/holidays/" + date.getFullYear());  
      
    if(holidayDataTiddler && holidayDataTiddler.fields.text) {  
        try {  
            var yearData = JSON.parse(holidayDataTiddler.fields.text);  
            return yearData[dateKey] || null;  
        } catch(e) {  
            return null;  
        }  
    }  
      
    return null;  
};
  
ChineseCalendarWidget.prototype.getAnnotations = function(date) {  
    var dateKey = this.year + "-" +   
                  String(this.month).padStart(2, '0') + "-" +   
                  String(date.getDate()).padStart(2, '0');  
      
    var annotationTiddlers = this.wiki.filterTiddlers(  
        this.annotationFilter.replace("{{date}}", dateKey), this);  
      
    if(annotationTiddlers.length > 0) {  
        var self = this;  
        return annotationTiddlers.map(function(title) {  
            var tiddler = self.wiki.getTiddler(title);  
            return {  
                text: tiddler.fields.text || "",  
                color: tiddler.fields["annotation-color"] || "default",  
                tiddlerTitle: title  
            };  
        });  
    }  
    return null;  
};  
  
ChineseCalendarWidget.prototype.addSingleAnnotation = function(cell, annotation) {  
    this.createAnnotationButton(cell, annotation, annotation.tiddlerTitle);  
};  
  
ChineseCalendarWidget.prototype.addMultipleAnnotations = function(cell, annotations) {  
    var self = this;  
      
    // 创建主按钮显示第一个批注的颜色  
    var mainAnnotation = annotations[0];  
    var combinedText = annotations.map(function(ann) { return ann.text; }).join('\n---\n');  
      
    // 如果只有一个批注有链接，直接链接到它；否则显示选择菜单  
    if(annotations.length === 1 || annotations.filter(function(ann) { return ann.tiddlerTitle; }).length <= 1) {  
        var targetTitle = annotations.find(function(ann) { return ann.tiddlerTitle; });  
        this.createAnnotationButton(cell, {  
            text: combinedText,  
            color: mainAnnotation.color  
        }, targetTitle ? targetTitle.tiddlerTitle : null);  
    } else {  
        this.createMultiAnnotationButton(cell, annotations);  
    }  
};  
  
ChineseCalendarWidget.prototype.createAnnotationButton = function(cell, annotation, targetTitle) {  
    var self = this;  
    var svgButton = this.document.createElement("div");  
    svgButton.setAttribute("class", "tc-calendar-annotation-button");  
      
    if(annotation.color && annotation.color !== "default") {  
        svgButton.classList.add("tc-calendar-annotation-" + annotation.color);  
    }  
      
    var defaultSvg = '<svg viewBox="0 0 128 128" width="16pt" height="16pt"><g fill-rule="evenodd"><path d="M64 128C28.654 128 0 99.346 0 64 0 28.654 28.654 0 64 0c35.346 0 64 28.654 64 64 0 35.346-28.654 64-64 64zm0-16c26.51 0 48-21.49 48-48S90.51 16 64 16 16 37.49 16 64s21.49 48 48 48z"/><circle cx="64" cy="48" r="8"/><path d="M56 72h16v32H56z"/></g></svg>';  
      
    var iconTiddler = this.wiki.getTiddler("$:/core/images/calendar-annotation");  
    if(iconTiddler && iconTiddler.fields.text) {  
        svgButton.innerHTML = iconTiddler.fields.text;  
    } else {  
        svgButton.innerHTML = defaultSvg;  
    }  
      
    // 创建弹窗内容  
    var popupContent = this.document.createElement("div");  
    popupContent.setAttribute("class", "tc-calendar-annotation-popup");  
    popupContent.style.display = "none";  
      
    var textLines = annotation.text.split('\n');  
    for(var i = 0; i < textLines.length; i++) {  
        if(i > 0) {  
            popupContent.appendChild(this.document.createElement("br"));  
        }  
        popupContent.appendChild(this.document.createTextNode(textLines[i]));  
    }  
      
    var isPopupVisible = false;  
      
    // 悬停显示功能  
    svgButton.addEventListener("mouseenter", function() {  
        popupContent.style.display = "block";  
        isPopupVisible = true;  
    });  
      
    svgButton.addEventListener("mouseleave", function() {  
        setTimeout(function() {  
            if(!popupContent.matches(':hover')) {  
                popupContent.style.display = "none";  
                isPopupVisible = false;  
            }  
        }, 100);  
    });  

    popupContent.addEventListener("mouseenter", function() {  
        popupContent.style.display = "block";  
        isPopupVisible = true;  
    });  
      
    popupContent.addEventListener("mouseleave", function() {  
        popupContent.style.display = "none";  
        isPopupVisible = false;  
    });  
      
    // 点击功能 - 跳转到批注条目  
    svgButton.addEventListener("click", function(event) {  
        event.stopPropagation();  
          
        // 如果有批注条目标题，则导航到该条目  
        if(targetTitle) {  
            self.dispatchEvent({  
                type: "tm-navigate",  
                navigateTo: targetTitle,  
                navigateFromTitle: self.getVariable("currentTiddler")  
            });  
        } else {  
            // 如果没有条目标题，则切换弹窗显示  
            if(isPopupVisible) {  
                popupContent.style.display = "none";  
                isPopupVisible = false;  
            } else {  
                popupContent.style.display = "block";  
                isPopupVisible = true;  
            }  
        }  
    });  
      
    cell.appendChild(svgButton);  
    cell.appendChild(popupContent);  
};  
  
ChineseCalendarWidget.prototype.createMultiAnnotationButton = function(cell, annotations) {  
    var self = this;  
    var svgButton = this.document.createElement("div");  
    svgButton.setAttribute("class", "tc-calendar-annotation-button tc-calendar-multi-annotation");  
      
    // 使用第一个批注的颜色  
    if(annotations[0].color && annotations[0].color !== "default") {  
        svgButton.classList.add("tc-calendar-annotation-" + annotations[0].color);  
    }  
      
    var defaultSvg = '<svg viewBox="0 0 128 128" width="16pt" height="16pt"><g fill-rule="evenodd"><path d="M64 128C28.654 128 0 99.346 0 64 0 28.654 28.654 0 64 0c35.346 0 64 28.654 64 64 0 35.346-28.654 64-64 64zm0-16c26.51 0 48-21.49 48-48S90.51 16 64 16 16 37.49 16 64s21.49 48 48 48z"/><circle cx="64" cy="48" r="8"/><path d="M56 72h16v32H56z"/></g></svg>';  
      
    svgButton.innerHTML = defaultSvg;  
      
    // 创建多批注选择菜单  
    var menuContent = this.document.createElement("div");  
    menuContent.setAttribute("class", "tc-calendar-annotation-menu");  
    menuContent.style.display = "none";  
      
    annotations.forEach(function(annotation, index) {  
        var menuItem = self.document.createElement("div");  
        menuItem.setAttribute("class", "tc-calendar-annotation-menu-item");  
          
        var preview = annotation.text.length > 20 ?   
                     annotation.text.substring(0, 20) + "..." :   
                     annotation.text;  
        menuItem.appendChild(self.document.createTextNode(preview));  
          
        menuItem.addEventListener("click", function(event) {  
            event.stopPropagation();  
            if(annotation.tiddlerTitle) {  
                self.dispatchEvent({  
                    type: "tm-navigate",  
                    navigateTo: annotation.tiddlerTitle,  
                    navigateFromTitle: self.getVariable("currentTiddler")  
                });  
            }  
            menuContent.style.display = "none";  
        });  
          
        menuContent.appendChild(menuItem);  
    });  
      
    var isMenuVisible = false;  
      
    svgButton.addEventListener("click", function(event) {  
        event.stopPropagation();  
        if(isMenuVisible) {  
            menuContent.style.display = "none";  
            isMenuVisible = false;  
        } else {  
            menuContent.style.display = "block";  
            isMenuVisible = true;  
        }  
    });  
      
    // 点击其他地方关闭菜单  
    document.addEventListener("click", function() {  
        menuContent.style.display = "none";  
        isMenuVisible = false;  
    });  
      
    cell.appendChild(svgButton);  
    cell.appendChild(menuContent);  
};  
  
ChineseCalendarWidget.prototype.refresh = function(changedTiddlers) {  
    var changedAttributes = this.computeAttributes();  
    if(changedAttributes.year || changedAttributes.month ||   
       changedAttributes.lunar || changedAttributes.holidays ||  
       changedAttributes["monday-first"] || changedAttributes["highlight-today"] ||  
       changedAttributes["annotation-filter"]) {  
        this.refreshSelf();  
        return true;  
    } else {  
        return false;  
    }  
};  
  
// 导出widget  
exports["chinese-calendar"] = ChineseCalendarWidget;