created: 20250606062947638
modified: 20250613032607554
module-type: widget
tags: 中文日历
title: $:/core/modules/widgets/chinese-calendar.js
type: application/javascript

/*\  
title: $:/core/modules/widgets/chinese-calendar.js  
type: application/javascript  
module-type: widget  
  
中文日历widget - 主要渲染逻辑  
\*/  
  
"use strict";  
  
var Widget = require("$:/core/modules/widgets/widget.js").widget;  
var CalendarCell = require("$:/core/modules/widgets/chinese-calendar/calendar-cell.js");  
var CalendarData = require("$:/core/modules/widgets/chinese-calendar/calendar-data.js");  
  
var ChineseCalendarWidget = function(parseTreeNode,options) {  
    this.initialise(parseTreeNode,options);  
};  
  
ChineseCalendarWidget.prototype = new Widget();  
  
ChineseCalendarWidget.prototype.render = function(parent,nextSibling) {  
    this.parentDomNode = parent;  
    this.computeAttributes();  
    this.execute();  
      
    var calendarNode = this.document.createElement("div");  
    calendarNode.setAttribute("class", "tc-chinese-calendar");  
      
    this.generateCalendar(calendarNode);  
      
    parent.insertBefore(calendarNode,nextSibling);  
    this.domNodes.push(calendarNode);  
};  
  
ChineseCalendarWidget.prototype.execute = function() {  
    this.year = parseInt(this.getAttribute("year", new Date().getFullYear().toString()));  
    this.month = parseInt(this.getAttribute("month", (new Date().getMonth() + 1).toString()));  
    this.showLunar = this.getAttribute("lunar", "yes") === "yes";  
    this.showHolidays = this.getAttribute("holidays", "yes") === "yes";  
    this.mondayFirst = this.getAttribute("monday-first", "no") === "yes";  
    this.highlightToday = this.getAttribute("highlight-today", "yes") === "yes";  
    this.annotationFilter = this.getAttribute("annotation-filter", "");  
      
    var today = new Date();  
    this.todayYear = today.getFullYear();  
    this.todayMonth = today.getMonth() + 1;  
    this.todayDate = today.getDate();  
      
    // 初始化辅助模块  
    this.cellHelper = new CalendarCell(this);  
    this.dataHelper = new CalendarData(this);  
};  
  
ChineseCalendarWidget.prototype.generateCalendar = function(container) {  
    var monthNames = ["一月", "二月", "三月", "四月", "五月", "六月",   
                     "七月", "八月", "九月", "十月", "十一月", "十二月"];  
      
    var dayNames = this.mondayFirst ?   
        ["一", "二", "三", "四", "五", "六", "日"] :   
        ["日", "一", "二", "三", "四", "五", "六"];  
      
    // 创建标题  
    var title = this.document.createElement("h3");  
    title.setAttribute("class", "tc-calendar-title");  
    title.appendChild(this.document.createTextNode(this.year + "年" + monthNames[this.month - 1]));  
    container.appendChild(title);  
      
    // 创建表格  
    var table = this.document.createElement("table");  
    table.setAttribute("class", "tc-calendar-table");  
      
    // 创建表头  
    var thead = this.document.createElement("thead");  
    var headerRow = this.document.createElement("tr");  
    dayNames.forEach(function(dayName) {  
        var th = this.document.createElement("th");  
        th.appendChild(this.document.createTextNode(dayName));  
        headerRow.appendChild(th);  
    }, this);  
    thead.appendChild(headerRow);  
    table.appendChild(thead);  
      
    // 创建表体  
    this.generateCalendarBody(table);  
      
    container.appendChild(table);  
};  
  
ChineseCalendarWidget.prototype.generateCalendarBody = function(table) {  
    var tbody = this.document.createElement("tbody");  
    var firstDay = new Date(this.year, this.month - 1, 1).getDay();  
      
    if(this.mondayFirst) {  
        firstDay = (firstDay === 0) ? 6 : firstDay - 1;  
    }  
      
    var daysInMonth = new Date(this.year, this.month, 0).getDate();  
    var date = 1;  
      
    for(var week = 0; week < 6; week++) {  
        var row = this.document.createElement("tr");  
        for(var day = 0; day < 7; day++) {  
            var cell = this.document.createElement("td");  
            if(week === 0 && day < firstDay || date > daysInMonth) {  
                cell.setAttribute("class", "tc-calendar-empty");  
            } else {  
                this.cellHelper.createDateCell(cell, date);  
                date++;  
            }  
            row.appendChild(cell);  
        }  
        tbody.appendChild(row);  
        if(date > daysInMonth) break;  
    }  
      
    table.appendChild(tbody);  
};  
  
ChineseCalendarWidget.prototype.refresh = function(changedTiddlers) {  
    var changedAttributes = this.computeAttributes();  
    if(changedAttributes.year || changedAttributes.month ||   
       changedAttributes.lunar || changedAttributes.holidays ||  
       changedAttributes["monday-first"] || changedAttributes["highlight-today"] ||  
       changedAttributes["annotation-filter"]) {  
        this.refreshSelf();  
        return true;  
    } else {  
        return false;  
    }  
};  
  
exports["chinese-calendar"] = ChineseCalendarWidget;