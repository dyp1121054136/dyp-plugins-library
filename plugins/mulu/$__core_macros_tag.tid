created: 20231218093543708
modified: 20250506015955327
tags: $:/tags/Macro SystemTiddlers 标签丸修改 目录工具
title: $:/core/macros/tag

\define tag-pill-styles()
background-color:$(backgroundColor)$;
fill:$(foregroundColor)$;
color:$(foregroundColor)$;
\end

<!-- This has no whitespace trim to avoid modifying $actions$. Closing tags omitted for brevity. -->
\define tag-pill-inner(tag,icon,colour,fallbackTarget,colourA,colourB,element-tag,element-attributes,actions)
\whitespace trim
\define mulu1()  ^\b\d+(-\d+)?\b(?![年月日])-
\define mulu2()  ^\b\d+(-\d+)?\b(?![年月日])
\define mulu0()
<$let
	foregroundColor=<<contrastcolour target:"""$colour$""" fallbackTarget:"""$fallbackTarget$""" colourA:"""$colourA$""" colourB:"""$colourB$""">>
	backgroundColor=<<__colour__>>
>
<$element-tag$
	$element-attributes$
	class="tc-tag-label tc-btn-invisible"
	style=<<tag-pill-styles>>
>
	<<__actions__>>
	<$transclude tiddler=<<__icon__>>/>
	<$vars tv-wikilinks="no">
<$wikify name="muluth" text={{{ [<currentTiddler>get[caption]else{!!title}] :filter[prefix[0]] +[search-replace:g:regexp<mulu1>,<mulu0>search-replace:g:regexp<mulu2>,<mulu0>] ~[<currentTiddler>get[caption]else{!!title}] }}} mode="inline" output="html"><<muluth>></$wikify>
	</$vars>
</$element-tag$>
</$let>
\end

\define tag-pill-body(tag,icon,colour,palette,element-tag,element-attributes,actions)
\whitespace trim
<$macrocall $name="tag-pill-inner"
	tag=<<__tag__>>
	icon=<<__icon__>>
	colour=<<__colour__>>
	fallbackTarget={{$palette$##tag-background}}
	colourA={{$palette$##foreground}}
	colourB={{$palette$##background}}
	element-tag=<<__element-tag__>>
	element-attributes=<<__element-attributes__>>
	actions=<<__actions__>>
/>
\end

\define tag-pill(tag,element-tag:"span",element-attributes:"",actions:"")
\whitespace trim
<span class="tc-tag-list-item" data-tag-title=<<__tag__>>>
	<$let currentTiddler=<<__tag__>>>
		<$macrocall $name="tag-pill-body"
			tag=<<__tag__>>
			icon={{{ [<currentTiddler>] :cascade[all[shadows+tiddlers]tag[$:/tags/TiddlerIconFilter]!is[draft]get[text]] }}}
			colour={{{ [<currentTiddler>] :cascade[all[shadows+tiddlers]tag[$:/tags/TiddlerColourFilter]!is[draft]get[text]] }}}
			palette={{$:/palette}}
			element-tag=<<__element-tag__>>
			element-attributes=<<__element-attributes__>>
			actions=<<__actions__>>/>
	</$let>
</span>
\end

\define tag(tag)
{{$tag$||$:/core/ui/TagTemplate}}
\end
