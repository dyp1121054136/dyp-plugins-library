name: Node.js CI

on:
  # push:
  # branches: [ master ]
  workflowdispatch: # 添加手动触发事件

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive' # 确保子模块被递归检出

      # 缓存 node_modules 目录，减少每次运行工作流时重新下载依赖项的时间和 API 调用
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: nodemodules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - run: npm install tiddlywiki # 安装 tiddlywiki

      - run: mkdir -p nodemodules/tiddlywiki/plugins/dyp/ # 创建必要的目录
      - run: cp -r plugins/ nodemodules/tiddlywiki/plugins/dyp/ # 复制插件到指定目录

      - run: ./nodemodules/.bin/tiddlywiki . --output output --build externalimages # 构建外部图片
      - run: ./nodemodules/.bin/tiddlywiki . --output output/library --build library # 构建库
      - run: ./nodemodules/.bin/tiddlywiki . --output output --build gui # 构建 GUI

      - name: Deploy to GitHub Pages
        if: success() # 只有在构建成功时才部署
        uses: crazy-max/ghaction-github-pages@v2
        with:
          targetbranch: gh-pages # 目标分支
          builddir: output # 构建目录
        env:
          GITHUBTOKEN: ${{ secrets.GITHUBTOKEN }} # 使用 GitHub Token 进行部署
